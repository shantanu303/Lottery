// SPDX-License-Identifier: GPL-3.0

pragma solidity >= 0.5.0 < 0.9.0;

contract lottery
{
 address public manager;
 address payable[] public participante;
 
 constructor()
 {
     manager=msg.sender;
 }
 receive() external payable
 {
     require(msg.value==1 ether);
     participante.push(payable(msg.sender));
 }
 function getbalance() public view returns(uint)
 {
     require(msg.sender==manager);
     return address(this).balance;
 }
function random() public view returns(uint)
 {
     return uint(keccak256(abi.encodePacked(block.difficulty,block.timestamp,participante.length)));
}
function selectwinner() public
{
    require(msg.sender==manager);
    require(participante.length>=3);
    uint r = random();
    address payable winner;
    uint index = r % participante.length;
    winner=participante[index];
    winner.transfer(getbalance());
    participante=new address payable[](0);
}
 }
